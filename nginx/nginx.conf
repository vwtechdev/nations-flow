user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Otimizações de performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/x-javascript
        image/svg+xml
        font/woff
        font/woff2
        application/font-woff
        application/font-woff2;
    
    # Brotli compression (se disponível)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Static files server
    server {
        listen 80;
        server_name _;

        # Static files
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx-static";
            add_header Vary "Accept-Encoding";
            
            # Rate limiting para arquivos estáticos
            limit_req zone=static burst=20 nodelay;
            
            # Security for static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Served-By "nginx-static";
                add_header Vary "Accept-Encoding";
                
                # Otimizações específicas para fontes
                location ~* \.(woff|woff2|ttf|eot)$ {
                    expires 1y;
                    add_header Cache-Control "public, immutable";
                    add_header Access-Control-Allow-Origin "*";
                }
            }
            
            # Logs específicos para arquivos estáticos
            access_log /var/log/nginx/static.log main;
        }

        # Media files
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public";
            add_header X-Served-By "nginx-media";
            add_header Vary "Accept-Encoding";
            
            # Rate limiting para arquivos de mídia
            limit_req zone=static burst=10 nodelay;
            
            # Security for media files
            location ~* \.(jpg|jpeg|png|gif|ico|svg|pdf|doc|docx|txt)$ {
                expires 30d;
                add_header Cache-Control "public";
                add_header X-Served-By "nginx-media";
                add_header Vary "Accept-Encoding";
            }
            
            # Configurações específicas para imagens
            location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
                expires 30d;
                add_header Cache-Control "public";
                add_header X-Served-By "nginx-media";
                add_header Vary "Accept-Encoding";
            }
            
            # Logs específicos para arquivos de mídia
            access_log /var/log/nginx/media.log main;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Default location - proxy to Django
        location / {
            # Rate limiting para API
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;
            
            proxy_pass http://web:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_redirect off;
            
            # Timeouts otimizados
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering otimizado
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache para respostas estáticas do Django
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_no_cache $http_pragma $http_authorization;
        }
        
        # Logs específicos para API
        access_log /var/log/nginx/api.log main;
    }
}
